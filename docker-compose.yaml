  version: '3'
  networks: 
    net:
  volumes:
    elasticsearch-data:
  services:
    elasticsearch:
       container_name: elasticsearch
       image: docker.elastic.co/elasticsearch/elasticsearch:7.9.2
       ports:
        - 9200:9200
       volumes:
        - elasticsearch-data:/usr/share/elasticsearch/data
       environment:
        - xpack.monitoring.enabled=true
        - xpack.watcher.enabled=false
        - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
        - discovery.type=single-node
       networks:
        - net
    kibana:
       container_name: kibana
       image: docker.elastic.co/kibana/kibana:7.9.2
       ports:
        - 5601:5601
       depends_on:
        - elasticsearch
       environment:
        - ELASTICSEARCH_URL=http://elasticsearch
       networks:
        - net
    rabbitmq:
        image: rabbitmq:3-management
        container_name: rabbitmq
        networks: 
          - net
        ports:
          - 15672:15672
          - 5672:5672
    eureka:
        image: "steeltoeoss/eurekaserver"
        container_name: eurekaserver
        networks: 
          - net
        ports:
          - 8761:8761
        healthcheck:
          test: ["CMD-SHELL", "curl -f http://localhost:8761/eureka/apps/ && echo 'OK'"]
          interval: 10s
          timeout: 5s
          retries: 3
    config-server:
      image: "steeltoeoss/config-server"
      container_name: configserver
      command: --spring.profiles.active=native --spring.cloud.config.server.native.searchLocations=/config
      networks: 
          - net
      ports: 
          - 8888:8888
      volumes:
          - ./src/config:/config
    employee-api:
      image: employee-api
      container_name: employee-api
      build: 
        context: ./employee-api
        dockerfile: Dockerfile
      ports:
        - "5101:5101"
        - "5100:5100"
      networks: 
        - net
      depends_on:
        eureka:
          condition: service_healthy 
    skill-api:
      image: skill-api
      container_name: skill-api
      build: 
        context: ./skill-api
        dockerfile: Dockerfile
      ports:
        - "6101:6101"
        - "6100:6100"
      networks: 
        - net
      depends_on:
        eureka:
          condition: service_healthy
    # app-ui:
    #  image: app-ui
    #  container_name: app-ui
    #  build: 
    #    context: ./employee-ui
    #    dockerfile: Dockerfile
    #  ports:
    #    - "8080:8080"
    #    - "8000:8000"
    #  networks: 
    #    - net
    #  depends_on:
    #    - employee-api
    #    - skill-api
    db:
      image: mysql
      command: --default-authentication-plugin=mysql_native_password
      restart: always
      ports: 
        - 3306:3306
      volumes:
        - ./src/dbmysql:/var/lib/mysql
      environment:
        MYSQL_ROOT_PASSWORD: password
      networks: 
        - net
    adminer:
      image: adminer
      restart: always
      ports:
        - 6060:8080
      networks: 
        - net